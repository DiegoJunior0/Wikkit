@page "/pictureoftheday"
@using Wikkit.Data;
@inject WikipediaDataService dataService;

<PageTitleSetter PageTitle="Picture of the Day" />

@if (articles == null || articles.Count == 0)
{
    <div>Loading...</div>
}
else
{
    <InfiniteScroll ObserverTargetId="observerTarget" ObservableTargetReached="(e) => LoadMore()">

        @foreach (var article in articles)
        {
            <ArticleCard ArticleData=article LargeImage=true />
        }

        <span id="observerTarget">
            <ArticleCard Title="Loading..." />
        </span>

    </InfiniteScroll>

}

@code {
    List<ArticlePageData> articles = new();

    private int daysOffset = 0;

    private const int daysToGet = 5;

    private int renderCount = 0;

    protected override async Task OnInitializedAsync()
    {
        await GetArticles();
    }

    private async Task GetArticles()
    {

        DateTime dateStartDate = DateTime.Now.AddDays(-daysOffset);

        DateTime endDate = DateTime.Now.AddDays(-daysOffset - daysToGet);

        var newArticles = await dataService.GetPhotosOfTheDay(dateStartDate, endDate);

        //ArticlePageData dateHeaderArticle = new();
        //dateHeaderArticle.title = date.ToString("yyyy MMMM dd");

        //articles.Add(dateHeaderArticle);

        articles.AddRange(newArticles);

        daysOffset += daysToGet;
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        renderCount++;

        return base.OnAfterRenderAsync(firstRender);
    }

    private async Task LoadMore()
    {
        if (renderCount < 3) return;

        await GetArticles();

    }
}
