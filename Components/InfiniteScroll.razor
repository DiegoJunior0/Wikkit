@using System.Diagnostics;
@*
    Infinite Scroll by Sven Matthys
    Copyright (c) 2020 Sven Matthys
    https://github.com/SveNord/Sve-Blazor-InfiniteScroll
*@

@inject IJSRuntime JSRuntime

@ChildContent

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string ObserverTargetId { get; set; }

    [Parameter]
    public EventCallback<bool> ObservableTargetReached { get; set; }

    private DotNetObjectReference<InfiniteScroll> objectRef;

    [CascadingParameter]
    public MainLayout Layout { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            objectRef = DotNetObjectReference.Create(this);
            var initResult = await JSRuntime.InvokeAsync<dynamic>("Observer.Initialize", objectRef, ObserverTargetId);
        }
    }

    [JSInvokable]
    public async Task OnIntersection()
    {
        if (!Layout.HasScrolled) return;

        await ObservableTargetReached.InvokeAsync(true);

        Layout.HasScrolled = false;
    }
}